#!/bin/sh
#
# `pomo`: Simple pomodoro timer
#
# Depends: `rm`, `mkdir`, `screen`/`tmux`, `stty`
# Environment: none

# TODO: De-bashify and POSIX-ulate (ANSI escapes instead of tput)

# Info about disowning a subprocess: https://stackoverflow.com/a/20338327
# ANSI escape codes: https://gist.github.com/fnky/458719343aabd01cfb17a3a4f7296797

usage() {
	echo 'usage: pomo [ start <min>[m[<sec>s] | stop | reset | resume ]'
	exit
} >&2

error() {
	printf '%s: ' "${0##*/}"
	printf '%s\n' "$@"
	exit 1
} >&2

alert() {
	read -r lines cols <<-EOF
		$(stty size)
	EOF

	x=$((cols / 2 - 15))
	y=$((lines / 2 - 6))
	w=$(printf '\033[7m') # Reverse
	c=$(printf '\033[0m') # Default
	pomo_emoji='🍅'

	print() {
		printf '\033[%s;%sH%s' "$y" "$x" "$*"
		y=$((y + 1))
	}

	# Not sexy but works
	# ###  ###  #####  ###  #   #
	# #  # #  # #     #   # #  #
	# ###  ###  ####  ##### ###
	# #  # #  # #     #   # #  #
	# ###  #  # ##### #   # #   #
	#   ##### # #   # ##### #
	#     #   # ## ## #     #
	#     #   # # # # ####  #
	#     #   # #   # #
	#     #   # #   # ##### #
	print "$w    $c  $w    $c  $w     $c  $w   $c  $w $c   $w $c"
	print "$w $c   $w $c $w $c   $w $c $w $c     $w $c   $w $c $w $c  $w $c"
	print "$w    $c  $w    $c  $w    $c  $w     $c $w   $c"
	print "$w $c   $w $c $w $c   $w $c $w $c     $w $c   $w $c $w $c  $w $c"
	print "$w    $c  $w $c   $w $c $w     $c $w $c   $w $c $w $c   $w $c"
	y=$((y + 1))
	print "    $w     $c $w $c $w $c   $w $c $w     $c $w $c"
	print "      $w $c   $w $c $w  $c $w  $c $w $c     $w $c"
	print "      $w $c   $w $c $w $c $w $c $w $c $w    $c  $w $c"
	print "      $w $c   $w $c $w $c   $w $c $w $c"
	print "      $w $c   $w $c $w $c   $w $c $w     $c $w $c"
	y=$((y + 1))

	while print 'Restart timer? [Y/n] '; read -r reply; do
		case "$reply" in
			[Yy]|[Yy]es|'') start 25m ;;
			[Nn]|[Nn]o) : ;;
			*) print '?'; continue ;;
		esac
		break
	done
}

is_running() {
	[ -e "$pid_log" ]
}

check() {
	[ -e "$time_log" ] && read -r time <"$time_log"

	if is_running; then
		printf 'pomo: remaining: %02dm%02ds\n' \
			$((time / 60)) $((time % 60))
	elif [ -n "$time" ]; then
		printf 'pomo: stopped: %02dm%02ds\n' \
			$((time / 60)) $((time % 60))
	else
		error 'no timer info available'
	fi
}

timer() {
	time="$1" session="$2"

	[ -d "$log_dir" ] || mkdir "$log_dir"
	printf '%s\n' $$ >"$pid_log"

	while [ "$time" -gt 0 ]; do
		printf '%s\n' "$time" >"$time_log"
		time=$((time - 1))
		sleep 1
	done

	# TODO: Probably a few holes in this.
	if [ -n "$TMUX" ]; then
		tmux neww -t "$session" pomo alert
	elif [ -n "$STY" ]; then
		screen -S "$session" -X screen pomo alert
	elif command -v xterm >/dev/null 2>&1; then
		exec xterm -e pomo alert
	elif command -v rxvt >/dev/null 2>&1; then
		exec rxvt -e pomo alert
	else
		exec x-terminal-emulator -e pomo alert
	fi

	rm -r "$log_dir"
	stop
}

start() {
	time="${1:-25m}"

	case $time in
		*m*s) min="${time%%m*}" sec="${time##*m}" sec="${sec%s}" ;;
		*m) min="${time%%m*}" ;;
		*s) sec="${time%s}" ;;
		*) min="$time" ;;
	esac

	case ${min}${sec} in
		*[!0-9]*|'') error "bad time format: $time"
	esac

	time=$((${min:=0} * 60 + ${sec:=0}))

	if [ -n "$TMUX" ]; then
		session="$(tmux display -p '#{session_id}')"
		tmux new -ds pomodoro pomo timer "$time" "$session" 2>/dev/null
	elif [ -n "$STY" ]; then
		session="$STY"
		screen -qlsS pomodoro
		[ $? -lt 11 ] && screen -c/dev/null -dmS pomodoro \
			pomo timer "$time" "$session"
	else
		( pomo timer "$time" & )
	fi
}

stop() {
	read -r pid <"$pid_log"
	is_running && kill "$pid"
	rm "$pid_log"
	check
}

reset() {
	rm -r "$log_dir" 2>/dev/null
}

resume() {
	read -r time <"$time_log"
	start "${time}s"
}

main() {
	log_dir=/tmp/pomo
	time_log="${log_dir}/time"
	pid_log="${log_dir}/pid"

	[ $# -gt 3 ] && usage

	case $1 in
		start) start "$2" ;;
		stop) stop ;;
		reset) reset ;;
		resume) resume ;;
		timer) timer "$2" "$3" ;;
		alert) shift; alert "$@";;
		"") check ;;
		-h|--help|*) usage ;;
	esac
}

main "$@"

